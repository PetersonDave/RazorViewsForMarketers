<?xml version="1.0"?>

<configuration xmlns:patch="http://www.sitecore.net/xmlconfig/">
	<sitecore>
		<blade>
			<!--  PRESENTER FACTORY
						Controls the technique used to resolve presenters for a model type
					
			  The default ConfigurationPresenterFactory will look through all types
			  in the current AppDomain and find all classes that inherit from IPresenter<>.
			  You can limit the scope of the search by passing it a list of assemblies to the
			  AddAssembly method (see commented example below). This will make the first hit
			  to the application faster as fewer types are loaded.
					
						IMPORTANT: You may use any element name to declare each assembly for ConfigurationPresenterFactory,
						but you can't use the same element name more than once.
					-->
			  <presenterFactory type="Blade.Configuration.ConfigurationPresenterFactory, Blade" />
			  <!--<presenterFactory type="Blade.Configuration.ConfigurationPresenterFactory, Blade">
					<assemblies hint="list:AddAssembly">
						<web>BladeProject.Web</web>
						<library1>BladeProject.Library</library1>
					</assemblies>
				</presenterFactory>-->
		</blade>
		<renderingControls>
			<control template="razor blade rendering" type="Blade.Razor.SitecoreRazorRenderingType, Blade" propertyMap="viewPath=path, properties=parameters" />
		</renderingControls>
		<pipelines>
			<resolveRenderingDataSource>
				<processor type="Blade.Pipelines.ResolveRenderingDataSource.HandleContextDataSource, Blade" />
				<processor type="Blade.Pipelines.ResolveRenderingDataSource.HandleStaticItems, Blade" />
				<processor type="Blade.Pipelines.ResolveRenderingDataSource.HandleSitecoreQuery, Blade" />
				<processor type="Blade.Pipelines.ResolveRenderingDataSource.HandleSearch, Blade" />
			</resolveRenderingDataSource>
		</pipelines>
	</sitecore>
</configuration>